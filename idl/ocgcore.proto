syntax = "proto3";
package ygopro;

option go_package = "DarkNeos/ygopropb";

// todo: comment

// reference: https://github.com/mycard/srvpro/blob/master/data/structs.json

message YgoCtosMsg {
  oneof msg {
    CtosPlayerInfo ctos_player_info = 1;
    CtosJoinGame ctos_join_game = 2;
    CtosUpdateDeck ctos_update_deck = 3;
    CtosHsReady ctos_hs_ready = 4;
    CtosHsStart ctos_hs_start = 5;
    CtosHsNotReady ctos_hs_not_ready = 6;
    CtosHandResult ctos_hand_result = 7;
  }  
}

message YgoStocMsg {
  oneof msg {
    StocJoinGame stoc_join_game = 1;
    StocChat stoc_chat = 2;
    StocHsPlayerEnter stoc_hs_player_enter = 3;
    StocTypeChange stoc_type_change = 4;
    StocHsPlayerChange stoc_hs_player_change = 5;
    StocHsWatchChange stoc_hs_watch_change = 6;
    StocSelectHand stoc_select_hand = 7;
  }
}

// ----- CTOS -----

message CtosPlayerInfo {
  string name = 1;
}

message CtosJoinGame {
  int32 version = 1;
  int32 gameid = 2;
  string passwd = 3;
}

message CtosUpdateDeck {
  repeated int32 main = 1;
  repeated int32 extra = 2;
  repeated int32 side = 3;
}

message CtosHsReady {
  // empty message
}

message CtosHsNotReady {
  // empty message
}

message CtosHsStart {
  // empty message
}

message CtosHandResult {
  enum HandType {
    UNKNOWN = 0;
    SCISSORS = 1;
    ROCK = 2;
    PAPER = 3;
  }

  HandType hand = 1;
}

// ----- STOC -----

message StocJoinGame {
  int32 lflist = 1;
  int32 rule = 2;
  int32 mode = 3;
  int32 duel_rule = 4;
  bool no_check_deck = 5;
  bool no_shuffle_deck = 6;
  int32 start_lp = 7;
  int32 start_hand = 8;
  int32 draw_count = 9;
  int32 time_limit = 10;
}

message StocChat {
  int32 player = 1;
  string msg = 2;
}

message StocHsPlayerEnter {
  string name = 1;
  int32 pos = 2;
}

message StocTypeChange {
  enum SelfType {
    UNKNOWN = 0;
    PLAYER1 = 1;
    PLAYER2 = 2;
    PLAYER3 = 3;
    PLAYER4 = 4;
    PLAYER5 = 5;
    PLAYER6 = 6;
    OBSERVER = 100;
  }

  SelfType self_type = 1;
  bool is_host = 2;
}

message StocHsPlayerChange {
  enum State {
    UNKNOWN = 0;
    MOVE = 1;
    READY = 2;
    NO_READY = 3;
    LEAVE = 4;
    TO_OBSERVER = 5;
  }

  State state = 1;
  int32 pos = 2;
  int32 moved_pos = 3;
}

message StocHsWatchChange {
  int32 count = 1;
}

message StocSelectHand {
  // empty message
}
